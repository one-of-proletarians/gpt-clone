/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ChatIndexImport } from './routes/chat/index'
import { Route as ChatChatIdImport } from './routes/chat/$chatId'

// Create Virtual Routes

const SettingsLazyImport = createFileRoute('/settings')()
const ReadingLazyImport = createFileRoute('/reading')()
const ShareIdLazyImport = createFileRoute('/share/$id')()

// Create/Update Routes

const SettingsLazyRoute = SettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))

const ReadingLazyRoute = ReadingLazyImport.update({
  path: '/reading',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/reading.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ChatIndexRoute = ChatIndexImport.update({
  path: '/chat/',
  getParentRoute: () => rootRoute,
} as any)

const ShareIdLazyRoute = ShareIdLazyImport.update({
  path: '/share/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/share.$id.lazy').then((d) => d.Route))

const ChatChatIdRoute = ChatChatIdImport.update({
  path: '/chat/$chatId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/reading': {
      id: '/reading'
      path: '/reading'
      fullPath: '/reading'
      preLoaderRoute: typeof ReadingLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/chat/$chatId': {
      id: '/chat/$chatId'
      path: '/chat/$chatId'
      fullPath: '/chat/$chatId'
      preLoaderRoute: typeof ChatChatIdImport
      parentRoute: typeof rootRoute
    }
    '/share/$id': {
      id: '/share/$id'
      path: '/share/$id'
      fullPath: '/share/$id'
      preLoaderRoute: typeof ShareIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/chat/': {
      id: '/chat/'
      path: '/chat/'
      fullPath: '/chat/'
      preLoaderRoute: typeof ChatIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  ReadingLazyRoute,
  SettingsLazyRoute,
  ChatChatIdRoute,
  ShareIdLazyRoute,
  ChatIndexRoute,
})

/* prettier-ignore-end */
